{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/roblukan/Library/Mobile%20Documents/com~apple~CloudDocs/CS%20Projects/hackmit-2025/timeshifter/app/demo/page.tsx"],"sourcesContent":["'use client';\n\nimport { useForm, FormProvider, useFieldArray, useWatch } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { useState } from 'react';\nimport { ScheduleBlock } from '../../lib/types';\n\n// Zod schema\nconst formSchema = z.object({\n  wake: z.string().min(1, 'Wake time is required'),\n  sleep: z.string().min(1, 'Sleep time is required'),\n  chronotype: z.enum(['morning', 'intermediate', 'evening']),\n  commitments: z.array(z.object({\n    start: z.string().min(1, 'Start time is required'),\n    end: z.string().min(1, 'End time is required'),\n    title: z.string().min(1, 'Title is required'),\n  })),\n  useML: z.boolean(),\n  sleep_hours: z.number().min(3).max(12).optional(),\n  peak_hour: z.number().min(0).max(23).optional(),\n  caffeine_pm: z.boolean().optional(),\n});\n\ntype FormValues = z.infer<typeof formSchema>;\n\nexport default function DemoPage() {\n  const [loading, setLoading] = useState(false);\n  const [serverResp, setServerResp] = useState<ScheduleBlock[] | null>(null);\n\n  const methods = useForm<FormValues>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      wake: '07:00',\n      sleep: '23:00',\n      chronotype: 'intermediate',\n      commitments: [],\n      useML: false,\n      sleep_hours: undefined,\n      peak_hour: undefined,\n      caffeine_pm: undefined,\n    },\n  });\n\n  const { fields, append, remove } = useFieldArray({\n    control: methods.control,\n    name: 'commitments',\n  });\n\n  const useML = useWatch({ control: methods.control, name: 'useML' });\n\n  const onSubmit = async (data: FormValues) => {\n    // Check for errors and focus first invalid field\n    const errors = methods.formState.errors;\n    if (Object.keys(errors).length > 0) {\n      const firstErrorField = Object.keys(errors)[0];\n      const firstErrorElement = document.getElementById(firstErrorField);\n      if (firstErrorElement) {\n        firstErrorElement.focus();\n      }\n      return;\n    }\n\n    setLoading(true);\n    try {\n      let finalChronotype = data.chronotype;\n\n      // If ML is enabled, try to predict chronotype\n      if (data.useML && data.sleep_hours !== undefined && data.peak_hour !== undefined && data.caffeine_pm !== undefined) {\n        try {\n          const mlResponse = await fetch('http://localhost:8001/predict', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              sleep_hours: data.sleep_hours,\n              peak_hour: data.peak_hour,\n              caffeine_pm: data.caffeine_pm,\n            }),\n          });\n\n          if (mlResponse.ok) {\n            const mlData = await mlResponse.json();\n            finalChronotype = mlData.chronotype;\n          }\n        } catch (error) {\n          console.warn('ML service unreachable:', error);\n        }\n      }\n\n      // Generate schedule with final chronotype\n      const scheduleResponse = await fetch('/api/schedule', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          wake: data.wake,\n          sleep: data.sleep,\n          chronotype: finalChronotype,\n          commitments: data.commitments,\n        }),\n      });\n\n      if (scheduleResponse.ok) {\n        const scheduleData = await scheduleResponse.json();\n        setServerResp(scheduleData.schedule);\n      } else {\n        console.error('Failed to generate schedule');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const setMorningPreset = () => {\n    methods.setValue('wake', '06:00');\n    methods.setValue('sleep', '22:00');\n    methods.setValue('chronotype', 'morning');\n  };\n\n  const setEveningPreset = () => {\n    methods.setValue('wake', '09:00');\n    methods.setValue('sleep', '01:00');\n    methods.setValue('chronotype', 'evening');\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-indigo-50 to-white p-8\">\n      <div className=\"max-w-3xl mx-auto\">\n        <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">\n          Build your circadian-aware day\n        </h1>\n        <p className=\"text-lg text-gray-800 mb-8\">\n          Enter your sleep schedule and optional commitments. We'll generate a plan aligned to your biology.\n        </p>\n        \n        <FormProvider {...methods}>\n          <form onSubmit={methods.handleSubmit(onSubmit)} className=\"space-y-8\">\n            {/* Basics Section */}\n            <div className=\"space-y-4\">\n              <h2 className=\"text-xl font-semibold text-gray-900\">Basics</h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                {/* Wake Time */}\n                <div className=\"space-y-2\">\n                  <label htmlFor=\"wake\" className=\"block text-sm font-medium text-gray-900\">\n                    Wake Time\n                  </label>\n                  <input\n                    id=\"wake\"\n                    type=\"time\"\n                    {...methods.register('wake')}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg text-gray-900 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n                    aria-invalid={methods.formState.errors.wake ? 'true' : 'false'}\n                    aria-describedby={methods.formState.errors.wake ? 'wake-error' : undefined}\n                  />\n                  {methods.formState.errors.wake && (\n                    <p id=\"wake-error\" className=\"text-sm text-red-600\">{methods.formState.errors.wake.message}</p>\n                  )}\n                </div>\n\n                {/* Sleep Time */}\n                <div className=\"space-y-2\">\n                  <label htmlFor=\"sleep\" className=\"block text-sm font-medium text-gray-900\">\n                    Sleep Time\n                  </label>\n                  <input\n                    id=\"sleep\"\n                    type=\"time\"\n                    {...methods.register('sleep')}\n                    className=\"w-full px-3 py-2 border border-gray-300 text-gray-900 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n                    aria-invalid={methods.formState.errors.sleep ? 'true' : 'false'}\n                    aria-describedby={methods.formState.errors.sleep ? 'sleep-error' : undefined}\n                  />\n                  <p className=\"text-xs text-gray-600 mt-1\">\n                    Crossing midnight is okay.\n                  </p>\n                  {methods.formState.errors.sleep && (\n                    <p id=\"sleep-error\" className=\"text-sm text-red-600\">{methods.formState.errors.sleep.message}</p>\n                  )}\n                </div>\n\n                {/* Chronotype */}\n                <fieldset className=\"space-y-2\">\n                  <legend className=\"block text-sm font-medium text-gray-900 mb-2\">\n                    Chronotype\n                  </legend>\n                  <div className=\"space-y-2\" role=\"radiogroup\" aria-invalid={methods.formState.errors.chronotype ? 'true' : 'false'} aria-describedby={methods.formState.errors.chronotype ? 'chronotype-error' : undefined}>\n                    {(['morning', 'intermediate', 'evening'] as const).map((type) => (\n                      <label key={type} className=\"flex items-center space-x-2 cursor-pointer\">\n                        <input\n                          id={`chronotype-${type}`}\n                          type=\"radio\"\n                          value={type}\n                          {...methods.register('chronotype')}\n                          className=\"text-indigo-600 focus:ring-indigo-500\"\n                          aria-describedby={methods.formState.errors.chronotype ? 'chronotype-error' : undefined}\n                        />\n                        <span className=\"text-sm text-gray-900 capitalize\">{type}</span>\n                      </label>\n                    ))}\n                  </div>\n                  <p className=\"text-xs text-gray-600 mt-1\">\n                    We'll fine-tune with ML if enabled.\n                  </p>\n                  {methods.formState.errors.chronotype && (\n                    <p id=\"chronotype-error\" className=\"text-sm text-red-600\">{methods.formState.errors.chronotype.message}</p>\n                  )}\n                </fieldset>\n              </div>\n            </div>\n\n            {/* Commitments Section */}\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <h2 className=\"text-xl font-semibold text-gray-900\">Commitments</h2>\n                <button\n                  type=\"button\"\n                  onClick={() => append({ start: '10:00', end: '11:00', title: 'Class' })}\n                  className=\"px-4 py-2 text-sm font-medium text-indigo-600 bg-indigo-50 rounded-lg hover:bg-indigo-100 transition-colors\"\n                >\n                  + Add\n                </button>\n              </div>\n\n              {fields.length === 0 ? (\n                <p className=\"text-sm text-gray-500 italic\">No commitments added yet</p>\n              ) : (\n                <div className=\"space-y-3\">\n                  {fields.map((field, index) => (\n                    <div key={field.id} className=\"grid grid-cols-12 gap-3 items-start\">\n                      {/* Start Time */}\n                      <div className=\"col-span-12 text-gray-900 md:col-span-3\">\n                        <label htmlFor={`commitments.${index}.start`} className=\"block text-xs font-medium text-gray-900 mb-1\">\n                          Start\n                        </label>\n                      <input\n                        id={`commitments.${index}.start`}\n                        type=\"time\"\n                        {...methods.register(`commitments.${index}.start`)}\n                        className=\"w-full px-3 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n                        aria-invalid={methods.formState.errors.commitments?.[index]?.start ? 'true' : 'false'}\n                        aria-describedby={methods.formState.errors.commitments?.[index]?.start ? `commitments-${index}-start-error` : undefined}\n                      />\n                      </div>\n\n                      {/* End Time */}\n                      <div className=\"col-span-12 text-gray-900 md:col-span-3\">\n                        <label htmlFor={`commitments.${index}.end`} className=\"block text-xs font-medium text-gray-900 mb-1\">\n                          End\n                        </label>\n                      <input\n                        id={`commitments.${index}.end`}\n                        type=\"time\"\n                        {...methods.register(`commitments.${index}.end`)}\n                        className=\"w-full px-3 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n                        aria-invalid={methods.formState.errors.commitments?.[index]?.end ? 'true' : 'false'}\n                        aria-describedby={methods.formState.errors.commitments?.[index]?.end ? `commitments-${index}-end-error` : undefined}\n                      />\n                      </div>\n\n                      {/* Title */}\n                      <div className=\"col-span-12 text-gray-900 md:col-span-5\">\n                        <label htmlFor={`commitments.${index}.title`} className=\"block text-xs font-medium text-gray-900 mb-1\">\n                          Title\n                        </label>\n                        <input\n                          id={`commitments.${index}.title`}\n                          type=\"text\"\n                          {...methods.register(`commitments.${index}.title`)}\n                          className=\"w-full px-3 py-2 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n                          placeholder=\"Enter commitment title\"\n                          aria-invalid={methods.formState.errors.commitments?.[index]?.title ? 'true' : 'false'}\n                          aria-describedby={methods.formState.errors.commitments?.[index]?.title ? `commitments-${index}-title-error` : undefined}\n                        />\n                      </div>\n\n                      {/* Delete Button */}\n                      <div className=\"col-span-12 md:col-span-1 flex justify-end\">\n                        <button\n                          type=\"button\"\n                          onClick={() => remove(index)}\n                          className=\"mt-6 p-2 text-red-600 hover:text-red-800 hover:bg-red-50 rounded-lg transition-colors\"\n                          title=\"Remove commitment\"\n                        >\n                          ✕\n                        </button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n\n              {methods.formState.errors.commitments && (\n                <p className=\"text-sm text-red-600\">Check your commitments</p>\n              )}\n            </div>\n\n            {/* ML Prediction Section */}\n            <div className=\"border border-gray-200 rounded-lg p-6 space-y-4\">\n              <div className=\"flex items-center space-x-3\">\n                <input\n                  id=\"useML\"\n                  type=\"checkbox\"\n                  {...methods.register('useML')}\n                  className=\"w-4 h-4 text-indigo-600 bg-gray-100 border-gray-300 rounded focus:ring-indigo-500\"\n                  aria-describedby=\"useML-description\"\n                />\n                <label htmlFor=\"useML\" className=\"text-sm font-medium text-gray-900 cursor-pointer\">\n                  Use ML to predict chronotype (PyTorch service)\n                </label>\n                <span id=\"useML-description\" className=\"sr-only\">\n                  Enable machine learning prediction of your chronotype based on sleep patterns and preferences\n                </span>\n              </div>\n\n              {useML && (\n                <div className=\"space-y-4\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    {/* Sleep Hours */}\n                    <div className=\"space-y-2\">\n                      <label htmlFor=\"sleep_hours\" className=\"block text-sm font-medium text-gray-900\">\n                        Sleep Hours\n                      </label>\n                      <input\n                        id=\"sleep_hours\"\n                        type=\"number\"\n                        step=\"0.5\"\n                        min=\"3\"\n                        max=\"12\"\n                        {...methods.register('sleep_hours', { valueAsNumber: true })}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n                        placeholder=\"7.5\"\n                        aria-invalid={methods.formState.errors.sleep_hours ? 'true' : 'false'}\n                        aria-describedby={methods.formState.errors.sleep_hours ? 'sleep_hours-error' : undefined}\n                      />\n                      {methods.formState.errors.sleep_hours && (\n                        <p id=\"sleep_hours-error\" className=\"text-sm text-red-600\">{methods.formState.errors.sleep_hours.message}</p>\n                      )}\n                    </div>\n\n                    {/* Peak Hour */}\n                    <div className=\"space-y-2\">\n                      <label htmlFor=\"peak_hour\" className=\"block text-sm font-medium text-gray-900\">\n                        Perceived Peak Hour\n                      </label>\n                      <input\n                        id=\"peak_hour\"\n                        type=\"number\"\n                        min=\"0\"\n                        max=\"23\"\n                        {...methods.register('peak_hour', { valueAsNumber: true })}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n                        placeholder=\"14\"\n                        aria-invalid={methods.formState.errors.peak_hour ? 'true' : 'false'}\n                        aria-describedby={methods.formState.errors.peak_hour ? 'peak_hour-error' : undefined}\n                      />\n                      {methods.formState.errors.peak_hour && (\n                        <p id=\"peak_hour-error\" className=\"text-sm text-red-600\">{methods.formState.errors.peak_hour.message}</p>\n                      )}\n                    </div>\n\n                    {/* Caffeine After 3pm */}\n                    <div className=\"space-y-2\">\n                      <label className=\"block text-sm font-medium text-gray-900\">\n                        Caffeine After 3pm\n                      </label>\n                      <div className=\"flex items-center space-x-2 pt-2\">\n                        <input\n                          id=\"caffeine_pm\"\n                          type=\"checkbox\"\n                          {...methods.register('caffeine_pm')}\n                          className=\"w-4 h-4 text-indigo-600 bg-gray-100 border-gray-300 rounded focus:ring-indigo-500\"\n                          aria-invalid={methods.formState.errors.caffeine_pm ? 'true' : 'false'}\n                          aria-describedby={methods.formState.errors.caffeine_pm ? 'caffeine_pm-error' : undefined}\n                        />\n                        <label htmlFor=\"caffeine_pm\" className=\"text-sm text-gray-900 cursor-pointer\">\n                          Yes, I drink caffeine after 3pm\n                        </label>\n                      </div>\n                      {methods.formState.errors.caffeine_pm && (\n                        <p id=\"caffeine_pm-error\" className=\"text-sm text-red-600\">{methods.formState.errors.caffeine_pm.message}</p>\n                      )}\n                    </div>\n                  </div>\n\n                  {/* ML Result Display Area */}\n                  <div className=\"mt-4 p-4 bg-gray-50 rounded-lg\">\n                    <p className=\"text-sm text-gray-800\">\n                      ML Result: <span className=\"font-medium text-gray-900\">Predicted: evening (83%)</span>\n                    </p>\n                  </div>\n                </div>\n              )}\n            </div>\n            \n            {/* Footer with preset buttons and submit */}\n            <div className=\"flex flex-col sm:flex-row gap-4 items-start sm:items-center\">\n              <div className=\"flex gap-3\">\n                <button\n                  type=\"button\"\n                  onClick={setMorningPreset}\n                  className=\"px-4 py-2 text-sm font-medium text-gray-900 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\"\n                >\n                  Morning-type preset\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={setEveningPreset}\n                  className=\"px-4 py-2 text-sm font-medium text-gray-900 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\"\n                >\n                  Evening-type preset\n                </button>\n              </div>\n              \n              <button\n                type=\"submit\"\n                disabled={loading}\n                className=\"ml-auto rounded-xl bg-indigo-600 px-8 py-3 text-white font-semibold shadow hover:bg-indigo-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {loading ? 'Generating…' : 'Generate My Day'}\n              </button>\n            </div>\n          </form>\n\n          {/* Schedule Preview */}\n          {serverResp && (\n            <div \n              className=\"mt-8 p-6 bg-white border border-gray-200 rounded-lg shadow-sm\"\n              role=\"status\"\n              aria-live=\"polite\"\n            >\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n                Your Generated Schedule\n              </h3>\n              <div className=\"space-y-3\">\n                {serverResp.map((block, index) => (\n                  <div key={index} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                    <div className=\"flex items-center space-x-3\">\n                      <span className=\"text-sm font-medium text-gray-900\">\n                        {block.start}–{block.end}\n                      </span>\n                      <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-indigo-100 text-indigo-800 capitalize\">\n                        {block.label}\n                      </span>\n                    </div>\n                    {block.rationale && (\n                      <span className=\"text-sm text-gray-800 max-w-md text-right\">\n                        {block.rationale}\n                      </span>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </FormProvider>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}